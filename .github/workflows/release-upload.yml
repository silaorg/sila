name: release-2-build-upload

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Tag to build and upload to (e.g., v1.2.3)
        required: true
      linux:
        description: Linux - build and upload
        type: boolean
        default: true
      windows:
        description: Windows - build and upload
        type: boolean
        default: true
      macos:
        description: macOS - build and upload
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  linux:
    if: ${{ inputs.linux }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - name: Setup and build
        uses: ./.github/actions/setup-build
        with:
          tag: ${{ inputs.tag }}

      - name: Package Linux artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TAG="${{ inputs.tag }}"
          export PLATFORM=linux
          node .github/scripts/release-upload.mjs

  windows:
    if: ${{ inputs.windows }}
    runs-on: windows-latest
    steps:
      - name: Checkout at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - name: Setup and build
        uses: ./.github/actions/setup-build
        with:
          tag: ${{ inputs.tag }}

      - name: Package Windows artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          $env:TAG='${{ inputs.tag }}'
          $env:PLATFORM='windows'
          node .github/scripts/release-upload.mjs

  macos:
    if: ${{ inputs.macos }}
    runs-on: macos-latest
    steps:
      - name: Checkout at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - name: Setup and build
        uses: ./.github/actions/setup-build
        with:
          tag: ${{ inputs.tag }}

      - name: Setup macOS certificate
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

      - name: Package macOS artifacts (signed & notarized)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_DISABLE_PUBLISH: true
          APPLE_ID: ${{ vars.APPLE_ID }}
          APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          CSC_IDENTITY_AUTO_DISCOVERY: true
        shell: bash
        run: |
          export TAG="${{ inputs.tag }}"
          export PLATFORM=macos
          node .github/scripts/release-upload.mjs